package OscriptVector2


register :: proc(vector2_id : ImportID)
{
	// Nota(jstn): metodos
	register_method(vector2_id,"abs",abs)
	register_method(vector2_id,"aspect",aspect)
	register_method(vector2_id,"angle",angle)
	register_method(vector2_id,"angle_from",angle_from)
	register_method(vector2_id,"angle_to_point",angle_to_point)
	register_method(vector2_id,"bounce",bounce)
	register_method(vector2_id,"clamp",clamp)
	register_method(vector2_id,"cross",cross)
	register_method(vector2_id,"direction_to",direction_to)
	register_method(vector2_id,"dot",dot)
	register_method(vector2_id,"distance_to",distance_to)
	register_method(vector2_id,"distance_to_squared",distance_to_squared)
	register_method(vector2_id,"floor",floor)
	register_method(vector2_id,"from_angle",from_angle)
	register_method(vector2_id,"invert",invert)
	register_method(vector2_id,"is_equal_approx",is_equal_approx)
	register_method(vector2_id,"is_normalized",is_normalized)
	register_method(vector2_id,"length",length)
	register_method(vector2_id,"length_squared",length_squared)
	register_method(vector2_id,"lerp",lerp)
	register_method(vector2_id,"limit_length",limit_length)
	register_method(vector2_id,"min",min)
	register_method(vector2_id,"max",max)
	register_method(vector2_id,"normalize",normalize)
	register_method(vector2_id,"move_toward",move_toward)
	register_method(vector2_id,"posmod",posmod)
	register_method(vector2_id,"reflect",reflect)
	register_method(vector2_id,"round",round)
	register_method(vector2_id,"rotate",rotate)
	register_method(vector2_id,"sign",sign)
	register_method(vector2_id,"smoothstep",smoothstep)
	register_method(vector2_id,"slerp",slerp)
	register_method(vector2_id,"slide",slide)
	register_method(vector2_id,"snapped",snapped)
	register_method(vector2_id,"orthogonal",orthogonal)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
	// register_method(vector2_id,"",)
}