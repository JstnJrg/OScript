package OscriptMath


register :: proc(math_id : ImportID)
{

	register_operators()

	// Nota(jstn): constants
	register_value(math_id,"PI", FLOAT_VAL(math.PI))
	register_value(math_id,"TAU",FLOAT_VAL(math.TAU))
	register_value(math_id,"e",  FLOAT_VAL(math.E))

	// Nota(jstn): metodos
	register_method(math_id,"deg2rad",deg2rad)
	register_method(math_id,"rad2deg",rad2deg)
	register_method(math_id,"sin",sin)
	register_method(math_id,"cos",cos)
	register_method(math_id,"tan",tan)
	register_method(math_id,"asin",asin)
	register_method(math_id,"acos",acos)
	register_method(math_id,"atan",atan)
	register_method(math_id,"atan2",atan2)
	register_method(math_id,"sqrt",sqrt)
	register_method(math_id,"inv_sqrt",inv_sqrt)
	register_method(math_id,"ln",ln)
	register_method(math_id,"log2",log2)
	register_method(math_id,"log10",log10)
	register_method(math_id,"log",log)
	register_method(math_id,"exp",exp)
	register_method(math_id,"sign",sign)
	register_method(math_id,"clamp",clamp)
	register_method(math_id,"clamp",clamp)
	register_method(math_id,"lerp",lerp)
	register_method(math_id,"unlerp",unlerp)
	register_method(math_id,"smoothstep",smoothstep)
	register_method(math_id,"smootherstep",smootherstep)
	register_method(math_id,"pow",pow)
	register_method(math_id,"ceil",ceil)
	register_method(math_id,"floor",floor)
	register_method(math_id,"round",round)
	register_method(math_id,"mod",mod)
	register_method(math_id,"min",min)
	register_method(math_id,"max",max)
	register_method(math_id,"fract",fract)
	register_method(math_id,"sinh",sinh)
	register_method(math_id,"cosh",cosh)
	register_method(math_id,"tanh",tanh)
	register_method(math_id,"asinh",asinh)
	register_method(math_id,"acosh",acosh)
	register_method(math_id,"atanh",atanh)
	register_method(math_id,"randomize",randomize)
	register_method(math_id,"randi",randi)
	register_method(math_id,"randf",randf)
	register_method(math_id,"randf_range",randf_range)
	register_method(math_id,"posmodi",posmodi)
	register_method(math_id,"posmodf",posmodf)
	register_method(math_id,"abs",abs)
	register_method(math_id,"step_decimal",step_decimal)
	register_method(math_id,"stepfy",stepfy)
	register_method(math_id,"exp2",exp2)
	register_method(math_id,"hypot",hypot)
	register_method(math_id,"remap",remap)
	register_method(math_id,"remap_clamped",remap_clamped)
	register_method(math_id,"wrap",wrap)
	register_method(math_id,"angle_lerp",angle_lerp)
	register_method(math_id,"angle_diff",angle_diff)
	register_method(math_id,"is_nan",is_nan)
	register_method(math_id,"is_inf",is_inf)
	// register_method(math_id,"",)
	// register_method(math_id,"",)
	// register_method(math_id,"",)
	// register_method(math_id,"",)
	// register_method(math_id,"",)
	// register_method(math_id,"",)
	// register_method(math_id,"",)
	// register_method(math_id,"",)
	// register_method(math_id,"",)
	// register_method(math_id,"",)
	// register_method(math_id,"",)
	// register_method(math_id,"",)
	// register_method(math_id,"",)
	// register_method(math_id,"",)
	// register_method(math_id,"",)
	// register_method(math_id,"",)
	// register_method(math_id,"",)
	// register_method(math_id,"sin",sin)
	// register_method(math_id,"sin",sin)
	// register_method(math_id,"sin",sin)
	// register_method(math_id,"sin",sin)
	// register_method(math_id,"sin",sin)
	// register_method(math_id,"sin",sin)
	// register_method(math_id,"sin",sin)
	// register_method(math_id,"sin",sin)
	// register_method(math_id,"sin",sin)
	// register_method(math_id,"sin",sin)
	// register_method(math_id,"sin",sin)
	// register_method(math_id,"sin",sin)
	// register_method(math_id,"sin",sin)
	// register_method(math_id,"sin",sin)
	// register_method(math_id,"sin",sin)
	// register_method(math_id,"sin",sin)
	// register_method(math_id,"sin",sin)
	// register_method(math_id,"sin",sin)
}